<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.mybatis.MyBatis02_22.dao.StudentMapper">

    <!--useGeneratedKeys="true"表明使用数据库自动生成的主键，
      keyColumn="id"指定Student表中主键列，keyProperty="id"
            表明当插入记录后，会把数据库生成的主键值设置到Student对象
            的id属性中，也就是说，它指定与Student表中的主键列对应的
      Student实体类中的属性是id这个属性-->
    <insert id="add" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="student">
        insert into student(name, gender, major, grade)
        values(#{name}, #{gender}, #{major}, #{grade})
    </insert>

    <delete id="delById" parameterType="int">
        delete from student where id = #{id}
    </delete>

    <!-- 学生实体的属性与学生表列名之间的映射 -->
    <resultMap id="studentResultMap" type="student">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="major" column="major"/>
        <result property="grade" column="grade"/>
    </resultMap>

    <!-- 根据学生id查询学生对象 -->
    <select id="getById" parameterType="int" resultMap="studentResultMap">
        select id, name, gender, major, grade
        from student where id = #{id}
    </select>

    <!-- 查找所有学生，此select语句返回一个集合，但
     resultMap映射的应该是集合中元素的类型，即Student，
          不是集合本身的类型-->
    <select id="getAll" parameterType="_int" resultMap="studentResultMap">
        select id, name, gender, major, grade
        from student
    </select>

    <!-- 根据id修改学生的相关信息 -->
    <update id="update" parameterType="student">
		update student set name=#{name},
		gender = #{gender},
		major = #{major},
		grade = #{grade}
		where id=#{id}
	</update>

</mapper>